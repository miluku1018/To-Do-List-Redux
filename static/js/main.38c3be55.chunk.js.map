{"version":3,"sources":["redux/actionTypes.js","components/TodoItem.js","redux/actions.js","redux/selectors.js","components/App.js","redux/reducers/todos.js","redux/reducers/filter.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["ADD_TODO","DELETE_TODO","TOGGLE_TODO","CLEAR_TODO","SET_FILTER","GET_TODOS_FROM_LOCALSTORAGE","TodoItemWrapper","styled","div","TodoContent","TodoButtonWrapper","BlueButton","button","RedButton","TodoItem","todo","dispatch","useDispatch","completed","name","onClick","id","type","payload","selectTodos","store","todoState","todos","selectFilter","filterState","filter","Container","Title","h1","Todo","Input","input","InputButton","Buttons","Button","ClearButton","App","useSelector","useState","value","setValue","useEffect","JSON","parse","localStorage","getItem","getTodosFromLocalStorage","setItem","stringify","handleFilter","setFilter","placeholder","onChange","e","target","preventDefault","map","todoId","initialState","combineReducers","state","action","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.38c3be55.chunk.js","sourcesContent":["export const ADD_TODO = \"add_todo\";\nexport const DELETE_TODO = \"delete_todo\";\nexport const TOGGLE_TODO = \"toggle_todo\";\nexport const CLEAR_TODO = \"clear_todo\";\nexport const SET_FILTER = \"set_filter\";\nexport const GET_TODOS_FROM_LOCALSTORAGE = \"get_todos_from_localStorage\";\n","import styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteTodo, toggleTodo } from \"../redux/actions\";\n\nconst TodoItemWrapper = styled.div`\n  width: 600px;\n  margin: 0 auto;\n  margin-top: 20px;\n  border-radius: 3px;\n  background: #ffffff63;\n  padding: 5px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\nconst TodoContent = styled.div`\n  margin: 5px;\n`;\n\nconst TodoButtonWrapper = styled.div`\n  display: flex;\n`;\n\nconst BlueButton = styled.button`\n  &:hover {\n    color: #ffffff;\n    background: green;\n    border: 1px solid transparent;\n    border-radius: 3px;\n  }\n  margin: 0 3px;\n  cursor: pointer;\n`;\n\nconst RedButton = styled.button`\n  &:hover {\n    color: #ffffff;\n    background: red;\n    border: 1px solid transparent;\n    border-radius: 3px;\n  }\n  margin: 0 3px;\n  cursor: pointer;\n`;\n\nexport default function TodoItem({ todo }) {\n  const dispatch = useDispatch();\n\n  return (\n    <TodoItemWrapper>\n      <TodoContent completed={todo.completed}>{todo.name}</TodoContent>\n      <TodoButtonWrapper>\n        <BlueButton onClick={() => dispatch(toggleTodo(todo.id))}>\n          {todo.completed ? \"未完成\" : \"已完成\"}\n        </BlueButton>\n        <RedButton onClick={() => dispatch(deleteTodo(todo.id))}>\n          刪除\n        </RedButton>\n      </TodoButtonWrapper>\n    </TodoItemWrapper>\n  );\n}\n","import {\n  GET_TODOS_FROM_LOCALSTORAGE,\n  ADD_TODO,\n  TOGGLE_TODO,\n  DELETE_TODO,\n  CLEAR_TODO,\n  SET_FILTER,\n} from \"./actionTypes\";\n\nexport const getTodosFromLocalStorage = (todos) => {\n  return {\n    type: GET_TODOS_FROM_LOCALSTORAGE,\n    payload: {\n      todos,\n    },\n  };\n};\n\nexport const addTodo = (name) => {\n  return {\n    type: ADD_TODO,\n    payload: {\n      name,\n    },\n  };\n};\n\nexport const deleteTodo = (id) => {\n  return {\n    type: DELETE_TODO,\n    payload: {\n      id,\n    },\n  };\n};\n\nexport const toggleTodo = (id) => {\n  return {\n    type: TOGGLE_TODO,\n    payload: {\n      id,\n    },\n  };\n};\n\nexport const clearTodo = () => {\n  return {\n    type: CLEAR_TODO,\n  };\n};\n\nexport const setFilter = (filter) => ({\n  type: SET_FILTER,\n  payload: {\n    filter,\n  },\n});\n","export const selectTodos = (store) => store.todoState.todos;\n\nexport const selectFilter = (store) => store.filterState.filter;\n","import { useState, useEffect } from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectTodos, selectFilter } from \"../redux/selectors\";\nimport {\n  addTodo,\n  clearTodo,\n  setFilter,\n  getTodosFromLocalStorage,\n} from \"../redux/actions\";\n\nconst Container = styled.div`\n  background-color: lightpink;\n  width: 600px;\n  margin: 0 auto;\n  padding: 10px 20px 20px;\n  border-radius: 3px;\n  box-shadow: 3px 3px lightgrey;\n`;\n\nconst Title = styled.h1`\n  text-align: center;\n`;\n\nconst Todo = styled.div`\n  text-align: center;\n`;\n\nconst Input = styled.input`\n  width: 200px;\n  border: 1px solid lightgrey;\n  height: 25px;\n  border-radius: 3px;\n`;\n\nconst InputButton = styled.button`\n  height: 28px;\n  width: 60px;\n  border: 1px solid transparent;\n  border-radius: 3px;\n  cursor: pointer;\n  &:hover {\n    background-color: black;\n    color: #ffffff;\n  }\n`;\n\nconst Buttons = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n`;\nconst Button = styled.button`\n  width: 80px;\n  height: 30px;\n  cursor: pointer;\n  background: #ffffff;\n  border-radius: 3px;\n  border: 1px solid #84828254;\n\n  & + & {\n    margin-left: 4px;\n  }\n  &:hover {\n    background-color: #00fffd;\n    border: 1px solid transparent;\n  }\n`;\n\nconst ClearButton = styled.button`\n  width: 80px;\n  height: 30px;\n  cursor: pointer;\n  background: #ffffff;\n  border-radius: 3px;\n  border: 1px solid #84828254;\n  margin-left: 4px;\n  &:hover {\n    background-color: #ee6854;\n    border: 1px solid transparent;\n  }\n`;\n\nexport default function App() {\n  const todos = useSelector(selectTodos);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const [value, setValue] = useState(\"\");\n\n  useEffect(() => {\n    const todos = JSON.parse(localStorage.getItem(\"todos\"));\n\n    if (todos) {\n      dispatch(getTodosFromLocalStorage(todos));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  const handleInputChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleButtonClick = (e) => {\n    e.preventDefault();\n    dispatch(addTodo(value));\n    setValue(\"\");\n  };\n\n  const handleClearClick = () => {\n    dispatch(clearTodo());\n  };\n\n  const handleFilter = (filter) => () => {\n    dispatch(setFilter(filter));\n  };\n\n  return (\n    <Container>\n      <Title> Miao's ToDoList</Title>\n      <Todo>\n        <Input\n          type=\"text\"\n          placeholder=\"請輸入待辦事項\"\n          onChange={handleInputChange}\n          value={value}\n        />\n        <InputButton onClick={handleButtonClick}>送出</InputButton>\n      </Todo>\n      <Buttons>\n        <Button onClick={handleFilter(\"all\")}>All</Button>\n        <Button onClick={handleFilter(\"active\")}>Active</Button>\n        <Button onClick={handleFilter(\"completed\")}>Completed</Button>\n        <ClearButton onClick={handleClearClick}>Clear</ClearButton>\n      </Buttons>\n      <div>\n        {todos\n          .filter((todo) => {\n            switch (filter) {\n              case \"all\":\n                return true;\n              case \"completed\":\n                return todo.completed;\n              case \"active\":\n                return !todo.completed;\n              default:\n                return true;\n            }\n          })\n          .map((todo) => (\n            <TodoItem key={todo.id} todo={todo} />\n          ))}\n      </div>\n    </Container>\n  );\n}\n","import {\n  GET_TODOS_FROM_LOCALSTORAGE,\n  ADD_TODO,\n  TOGGLE_TODO,\n  DELETE_TODO,\n  CLEAR_TODO,\n} from \"../actionTypes\";\n\nlet todoId = 0;\n\nconst initialState = {\n  todos: [],\n};\n\nexport default function todosReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_TODOS_FROM_LOCALSTORAGE: {\n      return {\n        todos: action.payload.todos,\n      };\n    }\n    case ADD_TODO: {\n      return {\n        ...state,\n        todos: [\n          ...state.todos,\n          {\n            id: todoId++,\n            name: action.payload.name,\n            completed: false,\n          },\n        ],\n      };\n    }\n    case DELETE_TODO: {\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.id !== action.payload.id),\n      };\n    }\n    case TOGGLE_TODO: {\n      return {\n        ...state,\n        todos: state.todos.map((todo) => {\n          if (todo.id === action.payload.id) {\n            return {\n              ...todo,\n              completed: !todo.completed,\n            };\n          }\n          return todo;\n        }),\n      };\n    }\n    case CLEAR_TODO: {\n      return {\n        todos: [],\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { SET_FILTER } from \"../actionTypes\";\n\nconst initialState = {\n  filter: \"all\",\n};\n\nexport default function filterReducer(state = initialState, action) {\n  if (action.type === SET_FILTER) {\n    return {\n      ...state,\n      filter: action.payload.filter,\n    };\n  }\n  return state;\n}\n","import { combineReducers } from \"redux\";\nimport todos from \"./todos\";\nimport filter from \"./filter\";\n\nexport default combineReducers({\n  todoState: todos,\n  filterState: filter,\n});\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}